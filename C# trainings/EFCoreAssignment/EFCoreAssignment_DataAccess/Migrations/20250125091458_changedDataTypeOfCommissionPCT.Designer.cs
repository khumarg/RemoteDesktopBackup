// <auto-generated />
using System;
using EFCoreAssignment_DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFCoreAssignment_DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20250125091458_changedDataTypeOfCommissionPCT")]
    partial class changedDataTypeOfCommissionPCT
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EFCoreAssignment_Models.Models.Department", b =>
                {
                    b.Property<int>("DEPARTMENT_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DEPARTMENT_ID"));

                    b.Property<string>("DEPARTMENT_NAME")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("MANAGER_ID")
                        .HasColumnType("int");

                    b.HasKey("DEPARTMENT_ID");

                    b.HasIndex("MANAGER_ID");

                    b.ToTable("Departments", "EFCoreAssignment");
                });

            modelBuilder.Entity("EFCoreAssignment_Models.Models.Employee", b =>
                {
                    b.Property<int>("EMPLOYEE_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EMPLOYEE_ID"));

                    b.Property<decimal>("COMMISSION_PCT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DEPARTMENT_ID")
                        .HasColumnType("int");

                    b.Property<string>("EMAIL")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("FIRST_NAME")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("HIRE_DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("JOB_ID")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("LAST_NAME")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("MANAGER_ID")
                        .HasColumnType("int");

                    b.Property<string>("PHONE_NUMBER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("SALARY")
                        .HasColumnType("real");

                    b.HasKey("EMPLOYEE_ID");

                    b.HasIndex("DEPARTMENT_ID");

                    b.HasIndex("JOB_ID");

                    b.HasIndex("MANAGER_ID");

                    b.ToTable("Employees", "EFCoreAssignment");
                });

            modelBuilder.Entity("EFCoreAssignment_Models.Models.EmployeeDetails", b =>
                {
                    b.Property<int>("EmployeeDetailsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeDetailsID"));

                    b.Property<int>("Aadhaar")
                        .HasMaxLength(12)
                        .HasColumnType("int");

                    b.Property<int>("EMPLOYEE_ID")
                        .HasColumnType("int");

                    b.HasKey("EmployeeDetailsID");

                    b.HasIndex("Aadhaar")
                        .IsUnique();

                    b.HasIndex("EMPLOYEE_ID");

                    b.ToTable("EmployeeDetails", "EFCoreAssignment");
                });

            modelBuilder.Entity("EFCoreAssignment_Models.Models.EmployeeProjects", b =>
                {
                    b.Property<int>("EMPLOYEE_ID")
                        .HasColumnType("int");

                    b.Property<int>("ProjectID")
                        .HasColumnType("int");

                    b.HasKey("EMPLOYEE_ID", "ProjectID");

                    b.HasIndex("ProjectID");

                    b.ToTable("EmployeeProjects", "EFCoreAssignment");
                });

            modelBuilder.Entity("EFCoreAssignment_Models.Models.Jobs", b =>
                {
                    b.Property<string>("JOB_ID")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("JOB_TITLE")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("MAX_SALARY")
                        .HasColumnType("int");

                    b.Property<int>("MIN_SALARY")
                        .HasColumnType("int");

                    b.HasKey("JOB_ID");

                    b.ToTable("Jobs", "EFCoreAssignment");
                });

            modelBuilder.Entity("EFCoreAssignment_Models.Models.Projects", b =>
                {
                    b.Property<int>("ProjectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectID"));

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProjectID");

                    b.ToTable("Projects", "EFCoreAssignment");
                });

            modelBuilder.Entity("EFCoreAssignment_Models.Models.Department", b =>
                {
                    b.HasOne("EFCoreAssignment_Models.Models.Employee", "Managers")
                        .WithMany()
                        .HasForeignKey("MANAGER_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Managers");
                });

            modelBuilder.Entity("EFCoreAssignment_Models.Models.Employee", b =>
                {
                    b.HasOne("EFCoreAssignment_Models.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DEPARTMENT_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFCoreAssignment_Models.Models.Jobs", "Jobs")
                        .WithMany()
                        .HasForeignKey("JOB_ID");

                    b.HasOne("EFCoreAssignment_Models.Models.Employee", "Managers")
                        .WithMany()
                        .HasForeignKey("MANAGER_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Jobs");

                    b.Navigation("Managers");
                });

            modelBuilder.Entity("EFCoreAssignment_Models.Models.EmployeeDetails", b =>
                {
                    b.HasOne("EFCoreAssignment_Models.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EMPLOYEE_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EFCoreAssignment_Models.Models.EmployeeProjects", b =>
                {
                    b.HasOne("EFCoreAssignment_Models.Models.Employee", "Employee")
                        .WithMany("EmployeeProjects")
                        .HasForeignKey("EMPLOYEE_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFCoreAssignment_Models.Models.Projects", "Projects")
                        .WithMany("EmployeeProjects")
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Projects");
                });

            modelBuilder.Entity("EFCoreAssignment_Models.Models.Employee", b =>
                {
                    b.Navigation("EmployeeProjects");
                });

            modelBuilder.Entity("EFCoreAssignment_Models.Models.Projects", b =>
                {
                    b.Navigation("EmployeeProjects");
                });
#pragma warning restore 612, 618
        }
    }
}
