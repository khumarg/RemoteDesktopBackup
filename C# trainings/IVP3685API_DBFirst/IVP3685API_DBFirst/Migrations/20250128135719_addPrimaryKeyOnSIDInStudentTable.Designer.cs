// <auto-generated />
using System;
using IVP3685API_DBFirst.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IVP3685API_DBFirst.Migrations
{
    [DbContext(typeof(Ivp3685Context))]
    [Migration("20250128135719_addPrimaryKeyOnSIDInStudentTable")]
    partial class addPrimaryKeyOnSIDInStudentTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("IVP3685API_DBFirst.Models.Administrator", b =>
                {
                    b.Property<string>("AdminId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("AdminID")
                        .IsFixedLength();

                    b.Property<string>("AdminContact")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AdminEmail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AdminName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("UserID");

                    b.HasKey("AdminId")
                        .HasName("PK__Administ__719FE4E87D06FF84");

                    b.HasIndex(new[] { "UserId" }, "UQ__Administ__1788CCAD22EA0EAB")
                        .IsUnique();

                    b.HasIndex(new[] { "AdminContact" }, "UQ__Administ__8286ECDC8685F11B")
                        .IsUnique();

                    b.HasIndex(new[] { "AdminEmail" }, "UQ__Administ__F2AA7AD91608B908")
                        .IsUnique();

                    b.ToTable("Administrator", "MinProj");
                });

            modelBuilder.Entity("IVP3685API_DBFirst.Models.AuditBank", b =>
                {
                    b.Property<int?>("Cid")
                        .HasColumnType("int")
                        .HasColumnName("CID");

                    b.Property<string>("NewAccType")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<double?>("NewBalance")
                        .HasColumnType("float");

                    b.Property<string>("OldAccType")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<double?>("OldBalance")
                        .HasColumnType("float");

                    b.Property<string>("Username")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("XnDate")
                        .HasColumnType("datetime");

                    b.Property<string>("XnType")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.ToTable("AuditBank", (string)null);
                });

            modelBuilder.Entity("IVP3685API_DBFirst.Models.Bank", b =>
                {
                    b.Property<int>("Cid")
                        .HasColumnType("int")
                        .HasColumnName("CID");

                    b.Property<string>("AccType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("Balance")
                        .HasColumnType("float");

                    b.Property<string>("Cname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CName");

                    b.Property<string>("Country")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasDefaultValue("India");

                    b.HasKey("Cid")
                        .HasName("PK__Bank__C1F8DC59E74D2FE1");

                    b.ToTable("Bank", (string)null);
                });

            modelBuilder.Entity("IVP3685API_DBFirst.Models.CreditCard", b =>
                {
                    b.Property<int>("Cid")
                        .HasColumnType("int")
                        .HasColumnName("CID");

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("CardType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Cname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CName");

                    b.HasKey("Cid")
                        .HasName("PK__CreditCa__C1F8DC591879723F");

                    b.ToTable("CreditCard", (string)null);
                });

            modelBuilder.Entity("IVP3685API_DBFirst.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("DEPARTMENT_ID");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("DEPARTMENT_NAME");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int")
                        .HasColumnName("MANAGER_ID");

                    b.HasKey("DepartmentId")
                        .HasName("DEPT_ID_PK");

                    b.HasIndex("ManagerId");

                    b.ToTable("DEPARTMENTS", (string)null);
                });

            modelBuilder.Entity("IVP3685API_DBFirst.Models.Dept", b =>
                {
                    b.Property<int>("Did")
                        .HasColumnType("int")
                        .HasColumnName("DID");

                    b.Property<string>("Dname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("DName");

                    b.HasKey("Did")
                        .HasName("PK__Dept__C0365630C484C6D9");

                    b.ToTable("Dept", (string)null);
                });

            modelBuilder.Entity("IVP3685API_DBFirst.Models.Emp", b =>
                {
                    b.Property<int>("Eid")
                        .HasColumnType("int")
                        .HasColumnName("EID");

                    b.Property<string>("AdharCard")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Country")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasDefaultValue("India");

                    b.Property<int?>("Did")
                        .HasColumnType("int")
                        .HasColumnName("DID");

                    b.Property<string>("Email")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Ename")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Gender")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<int?>("Mid")
                        .HasColumnType("int")
                        .HasColumnName("MID");

                    b.Property<double?>("Salary")
                        .HasColumnType("float");

                    b.HasKey("Eid")
                        .HasName("Emp_EID_PK");

                    b.HasIndex("Did");

                    b.HasIndex("Mid");

                    b.HasIndex(new[] { "AdharCard" }, "Emp_AC_UK")
                        .IsUnique()
                        .HasFilter("[AdharCard] IS NOT NULL");

                    b.HasIndex(new[] { "Email" }, "Emp_mail_UK")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("Emp", (string)null);
                });

            modelBuilder.Entity("IVP3685API_DBFirst.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("EMPLOYEE_ID");

                    b.Property<double?>("CommissionPct")
                        .HasColumnType("float")
                        .HasColumnName("COMMISSION_PCT");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("DEPARTMENT_ID");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("FIRST_NAME");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime")
                        .HasColumnName("HIRE_DATE");

                    b.Property<string>("JobId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("JOB_ID");

                    b.Property<string>("LastName")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("LAST_NAME");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int")
                        .HasColumnName("MANAGER_ID");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("PHONE_NUMBER");

                    b.Property<double?>("Salary")
                        .HasColumnType("float")
                        .HasColumnName("SALARY");

                    b.HasKey("EmployeeId")
                        .HasName("EMP_EMP_ID_PK");

                    b.HasIndex("JobId");

                    b.HasIndex("ManagerId");

                    b.HasIndex(new[] { "DepartmentId" }, "EMPLOYEES_DEPARTMENT_ID_NCI");

                    b.HasIndex(new[] { "Email" }, "EMP_EMAIL_UK")
                        .IsUnique();

                    b.HasIndex(new[] { "EmployeeId" }, "employees_FIDX")
                        .HasFilter("([COMMISSION_PCT] IS NOT NULL)");

                    b.HasIndex(new[] { "LastName", "JobId", "HireDate" }, "employees_UCI");

                    b.ToTable("EMPLOYEES", (string)null);
                });

            modelBuilder.Entity("IVP3685API_DBFirst.Models.GrpA", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TeamID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeamId"));

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("TeamId")
                        .HasName("PK__grpA__123AE7B920D7ACD0");

                    b.ToTable("grpA", (string)null);
                });

            modelBuilder.Entity("IVP3685API_DBFirst.Models.GrpB", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TeamID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeamId"));

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("TeamId")
                        .HasName("PK__grpB__123AE7B9F26CA441");

                    b.ToTable("grpB", (string)null);
                });

            modelBuilder.Entity("IVP3685API_DBFirst.Models.Hod", b =>
                {
                    b.Property<string>("Hodid")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("HODID");

                    b.Property<string>("Email")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("StreamId")
                        .HasColumnType("int")
                        .HasColumnName("StreamID");

                    b.HasKey("Hodid")
                        .HasName("PK__HOD__402E7AE593F32CAA");

                    b.HasIndex("StreamId");

                    b.HasIndex(new[] { "Email" }, "UQ__HOD__A9D10534ABF009C5")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("HOD", "MinProj");
                });

            modelBuilder.Entity("IVP3685API_DBFirst.Models.HomeLoan", b =>
                {
                    b.Property<int>("Cid")
                        .HasColumnType("int")
                        .HasColumnName("CID");

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("Cname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CName");

                    b.Property<string>("LoanType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Cid")
                        .HasName("PK__HomeLoan__C1F8DC59D64876CC");

                    b.ToTable("HomeLoan", (string)null);
                });

            modelBuilder.Entity("IVP3685API_DBFirst.Models.Job", b =>
                {
                    b.Property<string>("JobId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("JOB_ID");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("JOB_TITLE");

                    b.Property<int?>("MaxSalary")
                        .HasColumnType("int")
                        .HasColumnName("MAX_SALARY");

                    b.Property<int?>("MinSalary")
                        .HasColumnType("int")
                        .HasColumnName("MIN_SALARY");

                    b.HasKey("JobId")
                        .HasName("JOBS_ID_PK");

                    b.ToTable("JOBS", (string)null);
                });

            modelBuilder.Entity("IVP3685API_DBFirst.Models.NewBank", b =>
                {
                    b.Property<string>("AccType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("Balance")
                        .HasColumnType("float");

                    b.Property<int>("Cid")
                        .HasColumnType("int")
                        .HasColumnName("CID");

                    b.Property<string>("Cname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CName");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.ToTable("NewBank", (string)null);
                });

            modelBuilder.Entity("IVP3685API_DBFirst.Models.ProdBank", b =>
                {
                    b.Property<string>("AccType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("Balance")
                        .HasColumnType("float");

                    b.Property<int>("Cid")
                        .HasColumnType("int")
                        .HasColumnName("CID");

                    b.Property<string>("Cname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CName");

                    b.ToTable("Prod_Bank", (string)null);
                });

            modelBuilder.Entity("IVP3685API_DBFirst.Models.Product", b =>
                {
                    b.Property<string>("Pcategory")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("PCategory");

                    b.Property<int>("Pid")
                        .HasColumnType("int")
                        .HasColumnName("PID");

                    b.Property<string>("Pname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("PName");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.HasIndex(new[] { "Pcategory" }, "Product_PCat_NCI");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("IVP3685API_DBFirst.Models.Product1", b =>
                {
                    b.Property<int>("Pid")
                        .HasColumnType("int")
                        .HasColumnName("PID");

                    b.Property<string>("Pname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("PName");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.HasKey("Pid")
                        .HasName("PK__Product__C57755209A582938");

                    b.ToTable("Product", "Sales");
                });

            modelBuilder.Entity("IVP3685API_DBFirst.Models.Stdbank", b =>
                {
                    b.Property<int>("Cid")
                        .HasColumnType("int")
                        .HasColumnName("CID");

                    b.Property<string>("AccType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("Balance")
                        .HasColumnType("float");

                    b.Property<string>("Cname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CName");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Cid")
                        .HasName("STDBANK_PK");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Cid"), false);

                    b.ToTable("STDBANK", (string)null);
                });

            modelBuilder.Entity("IVP3685API_DBFirst.Models.Stream", b =>
                {
                    b.Property<int>("StreamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StreamID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StreamId"));

                    b.Property<string>("StreamName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("StreamId")
                        .HasName("PK__Stream__07C87AB2212F0503");

                    b.ToTable("Stream", "MinProj");
                });

            modelBuilder.Entity("IVP3685API_DBFirst.Models.Student", b =>
                {
                    b.Property<string>("Branch")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<double?>("Marks")
                        .HasColumnType("float");

                    b.Property<int>("Sid")
                        .HasColumnType("int")
                        .HasColumnName("SID");

                    b.Property<string>("Sname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("SName");

                    b.HasIndex(new[] { "Branch", "Marks" }, "Student_Branch_Marks_NCI");

                    b.HasIndex(new[] { "Branch" }, "Student_Branch_NCI");

                    b.HasIndex(new[] { "Marks" }, "Student_Marks_NCI");

                    b.HasIndex(new[] { "Sid" }, "Student_SID_UCI")
                        .IsUnique();

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex(new[] { "Sid" }, "Student_SID_UCI"));

                    b.HasIndex(new[] { "Sname", "Marks" }, "Student_SName_Marks_NCI");

                    b.HasIndex(new[] { "Sname" }, "Student_SName_NCI");

                    b.ToTable("student", (string)null);
                });

            modelBuilder.Entity("IVP3685API_DBFirst.Models.Student1", b =>
                {
                    b.Property<int>("Sid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sid"));

                    b.Property<DateTime>("AdmissionDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("Marks")
                        .HasColumnType("float");

                    b.Property<int?>("StreamId")
                        .HasColumnType("int")
                        .HasColumnName("StreamID");

                    b.HasKey("Sid")
                        .HasName("PK__Student__CA195970A9478EEE");

                    b.HasIndex("StreamId");

                    b.HasIndex(new[] { "Email" }, "UQ__Student__A9D1053490CF5F48")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("Student", "MinProj");
                });

            modelBuilder.Entity("IVP3685API_DBFirst.Models.VuCurrentAccount", b =>
                {
                    b.Property<string>("AccType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("Balance")
                        .HasColumnType("float");

                    b.Property<int>("Cid")
                        .HasColumnType("int")
                        .HasColumnName("CID");

                    b.ToTable((string)null);

                    b.ToView("vuCurrentAccount", (string)null);
                });

            modelBuilder.Entity("IVP3685API_DBFirst.Models.VuEmpDept", b =>
                {
                    b.Property<int>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("DEPARTMENT_ID");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("DEPARTMENT_NAME");

                    b.Property<string>("EmpName")
                        .HasMaxLength(46)
                        .IsUnicode(false)
                        .HasColumnType("varchar(46)")
                        .HasColumnName("EMP_NAME");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("EMPLOYEE_ID");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime")
                        .HasColumnName("HIRE_DATE");

                    b.Property<string>("JobId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("JOB_ID");

                    b.Property<double?>("Salary")
                        .HasColumnType("float")
                        .HasColumnName("SALARY");

                    b.ToTable((string)null);

                    b.ToView("vuEmpDept", (string)null);
                });

            modelBuilder.Entity("IVP3685API_DBFirst.Models.VuEmpDeptInfo", b =>
                {
                    b.Property<double?>("AverageSalary")
                        .HasColumnType("float");

                    b.Property<string>("DeptName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("NoOfEmployees")
                        .HasColumnType("int");

                    b.Property<double?>("TotalSalary")
                        .HasColumnType("float");

                    b.ToTable((string)null);

                    b.ToView("vuEmpDeptInfo", (string)null);
                });

            modelBuilder.Entity("IVP3685API_DBFirst.Models.VuEmpInfoKhumar", b =>
                {
                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("DEPARTMENT_ID");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("EMPLOYEE_ID");

                    b.Property<int?>("Exp")
                        .HasColumnType("int");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime")
                        .HasColumnName("HIRE_DATE");

                    b.Property<string>("HireMonth")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("JobId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("JOB_ID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(46)
                        .IsUnicode(false)
                        .HasColumnType("varchar(46)");

                    b.Property<double?>("Salary")
                        .HasColumnType("float")
                        .HasColumnName("SALARY");

                    b.Property<double?>("Tax")
                        .HasColumnType("float");

                    b.Property<int?>("Year")
                        .HasColumnType("int")
                        .HasColumnName("YEAR");

                    b.ToTable((string)null);

                    b.ToView("vuEmpInfo_Khumar", (string)null);
                });

            modelBuilder.Entity("IVP3685API_DBFirst.Models.VuEmpManager", b =>
                {
                    b.Property<int>("ManagerId")
                        .HasColumnType("int")
                        .HasColumnName("manager_id");

                    b.Property<string>("ManagerName")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("manager_name");

                    b.Property<string>("WorkerName")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("worker_name");

                    b.Property<double?>("WorkerSalary")
                        .HasColumnType("float")
                        .HasColumnName("worker_salary");

                    b.ToTable((string)null);

                    b.ToView("vuEmpManager", (string)null);
                });

            modelBuilder.Entity("IVP3685API_DBFirst.Models.VuJointAccount", b =>
                {
                    b.Property<string>("AccType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("Balance")
                        .HasColumnType("float");

                    b.Property<int>("Cid")
                        .HasColumnType("int")
                        .HasColumnName("CID");

                    b.Property<string>("Cname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CName");

                    b.ToTable((string)null);

                    b.ToView("vuJointAccount", (string)null);
                });

            modelBuilder.Entity("IVP3685API_DBFirst.Models.VuPremiumCustomer", b =>
                {
                    b.Property<string>("AccType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("Balance")
                        .HasColumnType("float");

                    b.Property<int>("Cid")
                        .HasColumnType("int")
                        .HasColumnName("CID");

                    b.Property<string>("Cname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CName");

                    b.ToTable((string)null);

                    b.ToView("vuPremiumCustomers", (string)null);
                });

            modelBuilder.Entity("IVP3685API_DBFirst.Models.VuSavingAccount", b =>
                {
                    b.Property<string>("AccType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("Balance")
                        .HasColumnType("float");

                    b.Property<int>("Cid")
                        .HasColumnType("int")
                        .HasColumnName("CID");

                    b.Property<string>("Cname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CName");

                    b.ToTable((string)null);

                    b.ToView("vuSavingAccount", (string)null);
                });

            modelBuilder.Entity("IVP3685API_DBFirst.Models.VuStudentDetail", b =>
                {
                    b.Property<DateTime>("AdmissionDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<string>("Hodname")
                        .IsRequired()
                        .HasMaxLength(41)
                        .IsUnicode(false)
                        .HasColumnType("varchar(41)")
                        .HasColumnName("HODName");

                    b.Property<int>("Sid")
                        .HasColumnType("int")
                        .HasColumnName("SID");

                    b.Property<string>("StreamName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasMaxLength(101)
                        .IsUnicode(false)
                        .HasColumnType("varchar(101)");

                    b.ToTable((string)null);

                    b.ToView("vuStudentDetails", "MinProj");
                });

            modelBuilder.Entity("IVP3685API_DBFirst.Models.Department", b =>
                {
                    b.HasOne("IVP3685API_DBFirst.Models.Employee", "Manager")
                        .WithMany("Departments")
                        .HasForeignKey("ManagerId")
                        .HasConstraintName("DEPT_MGR_FK");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("IVP3685API_DBFirst.Models.Emp", b =>
                {
                    b.HasOne("IVP3685API_DBFirst.Models.Dept", "DidNavigation")
                        .WithMany("Emps")
                        .HasForeignKey("Did")
                        .HasConstraintName("Emp_DID_FK");

                    b.HasOne("IVP3685API_DBFirst.Models.Emp", "MidNavigation")
                        .WithMany("InverseMidNavigation")
                        .HasForeignKey("Mid")
                        .HasConstraintName("Emp_MID_FK");

                    b.Navigation("DidNavigation");

                    b.Navigation("MidNavigation");
                });

            modelBuilder.Entity("IVP3685API_DBFirst.Models.Employee", b =>
                {
                    b.HasOne("IVP3685API_DBFirst.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("EMP_DEPT_FK");

                    b.HasOne("IVP3685API_DBFirst.Models.Job", "Job")
                        .WithMany("Employees")
                        .HasForeignKey("JobId")
                        .IsRequired()
                        .HasConstraintName("EMP_JOB_FK");

                    b.HasOne("IVP3685API_DBFirst.Models.Employee", "Manager")
                        .WithMany("InverseManager")
                        .HasForeignKey("ManagerId")
                        .HasConstraintName("EMP_MANAGER_FK");

                    b.Navigation("Department");

                    b.Navigation("Job");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("IVP3685API_DBFirst.Models.Hod", b =>
                {
                    b.HasOne("IVP3685API_DBFirst.Models.Stream", "Stream")
                        .WithMany("Hods")
                        .HasForeignKey("StreamId")
                        .HasConstraintName("FK__HOD__StreamID__3D2915A8");

                    b.Navigation("Stream");
                });

            modelBuilder.Entity("IVP3685API_DBFirst.Models.Student1", b =>
                {
                    b.HasOne("IVP3685API_DBFirst.Models.Stream", "Stream")
                        .WithMany("Student1s")
                        .HasForeignKey("StreamId")
                        .HasConstraintName("FK__Student__StreamI__37703C52");

                    b.Navigation("Stream");
                });

            modelBuilder.Entity("IVP3685API_DBFirst.Models.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("IVP3685API_DBFirst.Models.Dept", b =>
                {
                    b.Navigation("Emps");
                });

            modelBuilder.Entity("IVP3685API_DBFirst.Models.Emp", b =>
                {
                    b.Navigation("InverseMidNavigation");
                });

            modelBuilder.Entity("IVP3685API_DBFirst.Models.Employee", b =>
                {
                    b.Navigation("Departments");

                    b.Navigation("InverseManager");
                });

            modelBuilder.Entity("IVP3685API_DBFirst.Models.Job", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("IVP3685API_DBFirst.Models.Stream", b =>
                {
                    b.Navigation("Hods");

                    b.Navigation("Student1s");
                });
#pragma warning restore 612, 618
        }
    }
}
